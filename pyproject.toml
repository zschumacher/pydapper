[tool.poetry]
name = "pydapper"
version = "0.10.0"
description = "A pure python lib inspired by the dotnet lib dapper"
authors = ["Zach Schumacher <zschu15@gmail.com>"]
license = "MIT"
readme = "README.md"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Environment :: Console',
    'Environment :: MacOS X',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Internet',
    'Topic :: Database',
    'Topic :: Database :: Database Engines/Servers'
]

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
dsnparse = "^0.1.15"
psycopg2-binary = { version = "^2.9.9", optional = true }
pymssql = { version = "^2.2.6", optional = true }
types-psycopg2 = { version = "^2.9.4", optional = true }
types-pymssql = { version = "^2.1.0", optional = true }
cached-property = "^1.5.2"
mysql-connector-python = {version = "^8.0.28", optional = true}
cx-Oracle = { version = "^8.3.0", optional = true }
oracledb = { version = "^1.1.1", optional = true }
aiopg = { version = "^1.3.3", optional = true }
coro-context-manager = "0.2.0"
google-cloud-bigquery = {version = "^3.11.4", optional = true}
google-cloud-bigquery-storage = {version = "^2.22.0", optional = true}
pyarrow = {version = "^13.0.0", optional = true}
numpy = {version = "^1.24.2", optional = true}
psycopg = {extras = ["binary"], version = "^3.1.15", optional = true}

[tool.poetry.dev-dependencies]
black = "*"
coverage = "*"
devtools = "*"
Faker = "*"
isort = "*"
mypy = "*"
pytest = "7.*.*"
pytest-cov = "4.*.*"
mkdocs = "1.*.*"
mkdocs-material = "9.*.*"
markdown-include = "*"
codecov = "*"
pytest-asyncio = "0.21.*"
pytest-mock = "*"
pytest-vcr = "^1.0.2"

[tool.poetry.extras]
psycopg = ["psycopg"]
psycopg2 = ["psycopg2-binary", "types-psycopg2"]
pymssql = ["pymssql", "types-pymssql"]
mysql-connector-python = ["mysql-connector-python"]
cx_Oracle = ["cx-Oracle"]
oracledb = ["oracledb"]
aiopg = ["aiopg"]
google-cloud-bigquery = ["google-cloud-bigquery"]
# optional dep to make bigquery queries run faster
google-cloud-bigquery-storage = ["google-cloud-bigquery-storage", "pyarrow", "numpy"]
all = [
    "psycopg",
    "psycopg2",
    "pymssql",
    "mysql-connector-python",
    "cx_Oracle",
    "oracledb",
    "aiopg",
    "types-psycopg2",
    "types-pymssql",
    "google-cloud-bigquery",
    "google-cloud-bigquery-storage",
    "pyarrow",
    "numpy"
]

[tool.isort]
force_grid_wrap = 0
force_single_line = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3
skip = ["venv", ".venv", "media", "staticfiles"]
use_parentheses = true

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.circleci
    | \.git
    | \.github
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | venv
    | media
    | staticfiles
  )/
)
'''

[tool.coverage.run]
omit = [
    "pydapper/types.py",
    "tests/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "Protocol",
    "except ImportError",
    "@abstractmethod",
    "@overload"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
norecursedirs = ["venv", ".venv"]
markers = [
    "bigquery: marks tests that require bigquery (deselect with '-m \"not bigquery\"')",
    "core: marks core tests (deselect with '-m \"not core\"')",
    "mysql: marks tests that require mysql (deselect with '-m \"not mysql\"')",
    "oracle: marks tests that require oracle (deselect with '-m \"not oracle\"')",
    "postgresql: marks tests that require postgres (deselect with '-m \"not postgres\"')",
    "sqlite: marks tests that require sqlite (deselect with '-m \"not sqlite\"')",
    "mssql: marks tests that require mssql (deselect with '-m \"not mssql\")"
]
