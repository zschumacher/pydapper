name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]

    services:

      postgres:
        image: postgres:latest
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: pydapper
          POSTGRES_PASSWORD: pydapper
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mssql-server:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1434:1433
        env:
          SA_PASSWORD: "pydapper!PYDAPPER"
          ACCEPT_EULA: "Y"
          MSSQL_PID: "Express"

      mysql:
        image: mysql:latest
        ports:
          - 3307:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: "pydapper"
          MYSQL_USER: "pydapper"
          MYSQL_PASSWORD: "pydapper"
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

      oracle:
        image: gvenzl/oracle-xe:slim
        ports:
          - 1522:1521
        env:
          ORACLE_RANDOM_PASSWORD: "yes"
          APP_USER: "pydapper"
          APP_USER_PASSWORD: "pydapper"
          ORACLE_DATABASE: "pydapper"
        options: >- # oracle has a longer startup so give the healthcheck more retries
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        env:
          POETRY_VERSION: "1.1.11"
        run: |
          curl -sSL https://install.python-poetry.org | python -
          poetry config virtualenvs.create false

      - name: Install Oracle Instant Client
        run: |
          sudo apt-get update
          sudo apt-get install wget alien libaio1 -y
          wget https://download.oracle.com/otn_software/linux/instantclient/215000/oracle-instantclient-basiclite-21.5.0.0.0-1.x86_64.rpm
          sudo alien -i oracle-instantclient-basiclite-21.5.0.0.0-1.x86_64.rpm

      - name: Cache dependencies
        id: cache-poetry-deps
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('poetry.lock') }}-test

      - name: Install dependencies
        if: steps.cache-poetry-deps.outputs.cache-hit != 'true'
        run: poetry install --extras "psycopg2 pymssql mysql-connector-python cx_Oracle"

      - name: test
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          poetry run pytest --cov=. --cov-branch -v --durations=25
          poetry run coverage report -m
          poetry run codecov -F ${{ matrix.python-version }}
